knitr::opts_chunk$set(echo = TRUE)
library(plotly)
library(rstan)
rex <- function(p, lambda){-log(1-p)/lambda}
lambda <- 1/9 #rate of occrance 1 in 9 hours
p <- runif(1000)
sample <- rex(p, lambda)
plot_ly(x=sample) %>% add_histogram()
log.post.exp <- function(lambda, sum.x, n){
(n-1)*log(lambda) -lambda*(sum.x)
}
sum.x <- sum(sample)
n <- length(sample)
a <- 5
b <- 1
posible.lambda <- seq(0.0001, 1, 0.001)
log.post.lambda <- log.post.exp(posible.lambda, sum.x, n)
fig1 <- plot_ly(x=posible.lambda, y= log.post.lambda, name='log posterior'  ) %>% add_lines()
fig2 <- plot_ly(x=posible.lambda, y= exp(log.post.lambda- max(log.post.lambda)), name = 'scaled posterior'  ) %>% add_lines()
fig3 <- plot_ly(x=posible.lambda, y= exp(log.post.lambda- max(log.post.lambda)), name = 'scaled posterior')%>%
add_lines() %>%
layout(xaxis=list(range=c(0.08, 0.14)))
subplot(fig1, fig2, fig3)
hpd <- function(nsims, postsims, alpha){ #by Sean vdMerwe... ufs
sorted.postsims <- sort(postsims)
numints <- floor(nsims * alpha)
gap <- round (nsims* (1-alpha))
widths <- sorted.postsims [(1+ gap ) :( numints + gap ) ] - sorted.postsims[1: numints]
HPD <- sorted.postsims [ c ( which.min ( widths ) ,( which.min( widths ) + gap ) ) ]
return(HPD)
}
n.sims <- 1000
sims.lambda <-sample(posible.lambda, n.sims, TRUE, exp(log.post.lambda- max(log.post.lambda)))
HPD <- hpd(n.sims, sims.lambda, 0.05)
results <- c(HPD[1], HPD[2],median(sims.lambda), mean(sims.lambda))
results
plot_ly(x=sims.lambda) %>% add_histogram() %>% layout(title = 'Hostogram of sims for lambda, the rate', margin='carpet')
p <- runif(1000)
newobs <- rex(p, sims.lambda)
plot_ly(x= newobs) %>% add_histogram() %>%
layout(title = 'Hostogram of sims for new observations, given the rate', margin='carpet')
lambda <- 1/9 #rate of occrance 1 in 9 hours
samples.size <- 1000
sample.size <- 100
mat.samples <- matrix(NA, nrow = samples.size, ncol = sample.size)
for(i in 1:samples.size){
p <- runif(sample.size)
sample <- rex(p, lambda)
mat.samples[i,] <- sample
}
n.sims.lambda <- 1000
mat.results <- matrix(NA, nrow = samples.size, ncol = 4)
posible.lambda <- seq(0.0001, 3, 0.001)
for(i in 1:samples.size){
current.sample <- mat.samples[i,]
log.post.lambda <- log.post.exp(posible.lambda,  sum(current.sample), sample.size)
sims.lambda <-sample(posible.lambda, n.sims.lambda, TRUE, exp(log.post.lambda- max(log.post.lambda)))
HPD <- hpd(n.sims, sims.lambda, 0.05)
results <- c(HPD[1], HPD[2],median(sims.lambda), mean(sims.lambda))
mat.results[i,] <- results
}
plot_ly(x =mat.results[,1], name='lower 0.05 hpd interval', alpha = 0.7 ) %>% add_histogram() %>%
add_histogram(x =mat.results[,2],  name='upper 0.95  hpd interval') %>%
add_histogram(x =mat.results[,3],  name='median') %>%
add_histogram(x =mat.results[,4],  name='mean') %>%
layout(barmode='overlay', title = 'Hostogram of simulation study results', margin='carpet')
blogdown:::serve_site()
blogdown:::serve_site()
